{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/card-service.service.ts","./src/app/card/card.component.ts","./src/app/card/card.component.html","./src/app/news-card/news-card.component.ts","./src/app/news-card/news-card.component.html","./src/app/search.pipe.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  // title: string = '';\n  // urlToImage: any;\n  // constructor(private http: HttpClient) {}\n  // getNews() {\n  //   this.http\n  //     .get(\n  //       `http://newsapi.org/v2/top-headlines?' + 'country=us&' + 'apiKey=c28ec9b0a8504b3897a5de03d03525df`\n  //     )\n  //     .subscribe((response) => {\n  //       this.response = response;\n  //       console.log(this.response);\n  //     });\n  // }\n}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CardComponent } from './card/card.component';\nimport { NewsCardComponent } from './news-card/news-card.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CardServiceService } from './card-service.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SearchPipe } from './search.pipe';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst appRoutes: Routes = [\n  { path: '', component: CardComponent },\n  { path: 'newsCard', component: NewsCardComponent },\n];\n@NgModule({\n  declarations: [AppComponent, CardComponent, SearchPipe, NewsCardComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatInputModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule,\n    RouterModule.forRoot(appRoutes),\n  ],\n  providers: [CardServiceService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CardServiceService {}\n","import { element } from 'protractor';\r\nimport { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\nlet answer;\r\nconst url =\r\n  'http://newsapi.org/v2/top-headlines?' +\r\n  'country=us&' +\r\n  'apiKey=c28ec9b0a8504b3897a5de03d03525df';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss'],\r\n})\r\nexport class CardComponent {\r\n  titles: any;\r\n  response: any;\r\n  articles: any;\r\n  urlToImage: any;\r\n  arrayNews: any;\r\n  public page: number;\r\n  public collectionSize: number;\r\n  searchN = '';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  goToPage(pageName: string) {\r\n    this.router.navigate([`${pageName}`]);\r\n    this.http.get(url).subscribe((response) => {\r\n      answer = this.response = response;\r\n      let arrayNews = answer.articles.map((el) => el.title);\r\n      let url = answer.articles.map((el) => el.urlToImage);\r\n      this.titles = arrayNews;\r\n      this.urlToImage = url;\r\n    });\r\n  }\r\n\r\n  searchNews() {\r\n    this.http.get(url).subscribe((response) => {\r\n      answer = this.response = response;\r\n      let arrayNews = answer.articles.map((el) => el.title);\r\n      let url = answer.articles.map((el) => el.urlToImage);\r\n      this.titles = arrayNews;\r\n      this.urlToImage = url;\r\n    });\r\n  }\r\n}\r\n","<div class=\"example-container\">\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Поиск</mat-label>\r\n    <input matInput [(ngModel)]=\"searchN\" />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"card-div\">\r\n  <button class=\"btn\" (click)=\"searchNews()\">Get News</button>\r\n</div>\r\n<div *ngIf=\"response\">\r\n  <h1 *ngFor=\"let title of titles | search: searchN\">{{ title }}</h1>\r\n  <img *ngFor=\"let url of urlToImage\" src=\"{{ url }}\" alt=\"news\" (click)=\"goToPage('newsCard')\" />\r\n</div>\r\n<div>\r\n  <ngb-pagination class=\"d-flex justify-content-center\" [collectionSize]=\"20\" [(page)]=\"page\" [boundaryLinks]=\"true\">\r\n  </ngb-pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nlet answer;\nconst url =\n  'http://newsapi.org/v2/top-headlines?' +\n  'country=us&' +\n  'apiKey=c28ec9b0a8504b3897a5de03d03525df';\n\n@Component({\n  selector: 'app-news-card',\n  templateUrl: './news-card.component.html',\n  styleUrls: ['./news-card.component.scss'],\n})\nexport class NewsCardComponent {\n  titles: any;\n  response: any;\n  articles: any;\n  urlToImage: any;\n  arrayNews: any;\n  public page: number;\n  public collectionSize: number;\n  searchN = '';\n\n  constructor(private http: HttpClient) {}\n\n  getNews() {\n    this.http.get(url).subscribe((response) => {\n      answer = this.response = response;\n      let arrayNews = answer.articles.map((el) => {\n        return el.title;\n      });\n      this.titles = arrayNews;\n    });\n  }\n}\n","<h1>Bout News</h1>\n<img\n  src=\"https://botostore.com/netcat_files/6/7/preview_24542_1540646092.jpg_nc_cat_103_oh_a3aa9ac652b11ea36c71e744b62809e0_oe_5C5FBBBF\"\n  alt=\"AngularNews\">\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'search',\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(news, value) {\r\n    return news.filter((news) => {\r\n      return news.includes(value);\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}