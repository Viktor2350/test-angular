{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/card-service.service.ts","webpack:///src/app/card/card.component.ts","webpack:///src/app/card/card.component.html","webpack:///src/app/news-card/news-card.component.ts","webpack:///src/app/news-card/news-card.component.html","webpack:///src/app/search.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","appRoutes","path","component","AppModule","forRoot","declarations","imports","providers","bootstrap","CardServiceService","providedIn","answer","url","CardComponent","http","router","searchN","pageName","navigate","get","subscribe","response","arrayNews","articles","map","el","title","urlToImage","titles","searchNews","NewsCardComponent","SearchPipe","news","value","filter","includes","name","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  // title: string = '';\n  // urlToImage: any;\n  // constructor(private http: HttpClient) {}\n  // getNews() {\n  //   this.http\n  //     .get(\n  //       `http://newsapi.org/v2/top-headlines?' + 'country=us&' + 'apiKey=c28ec9b0a8504b3897a5de03d03525df`\n  //     )\n  //     .subscribe((response) => {\n  //       this.response = response;\n  //       console.log(this.response);\n  //     });\n  // }\n}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CardComponent } from './card/card.component';\nimport { NewsCardComponent } from './news-card/news-card.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CardServiceService } from './card-service.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SearchPipe } from './search.pipe';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst appRoutes: Routes = [\n  { path: '', component: CardComponent },\n  { path: 'newsCard', component: NewsCardComponent },\n];\n@NgModule({\n  declarations: [AppComponent, CardComponent, SearchPipe, NewsCardComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatInputModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule,\n    RouterModule.forRoot(appRoutes),\n  ],\n  providers: [CardServiceService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CardServiceService {}\n","import { element } from 'protractor';\r\nimport { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\nlet answer;\r\nconst url =\r\n  'http://newsapi.org/v2/top-headlines?' +\r\n  'country=us&' +\r\n  'apiKey=c28ec9b0a8504b3897a5de03d03525df';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss'],\r\n})\r\nexport class CardComponent {\r\n  titles: any;\r\n  response: any;\r\n  articles: any;\r\n  urlToImage: any;\r\n  arrayNews: any;\r\n  public page: number;\r\n  public collectionSize: number;\r\n  searchN = '';\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  goToPage(pageName: string) {\r\n    this.router.navigate([`${pageName}`]);\r\n    this.http.get(url).subscribe((response) => {\r\n      answer = this.response = response;\r\n      let arrayNews = answer.articles.map((el) => el.title);\r\n      let url = answer.articles.map((el) => el.urlToImage);\r\n      this.titles = arrayNews;\r\n      this.urlToImage = url;\r\n    });\r\n  }\r\n\r\n  searchNews() {\r\n    this.http.get(url).subscribe((response) => {\r\n      answer = this.response = response;\r\n      let arrayNews = answer.articles.map((el) => el.title);\r\n      let url = answer.articles.map((el) => el.urlToImage);\r\n      this.titles = arrayNews;\r\n      this.urlToImage = url;\r\n    });\r\n  }\r\n}\r\n","<div class=\"example-container\">\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>Поиск</mat-label>\r\n    <input matInput [(ngModel)]=\"searchN\" />\r\n  </mat-form-field>\r\n</div>\r\n<div class=\"card-div\">\r\n  <button class=\"btn\" (click)=\"searchNews()\">Get News</button>\r\n</div>\r\n<div *ngIf=\"response\">\r\n  <h1 *ngFor=\"let title of titles | search: searchN\">{{ title }}</h1>\r\n  <img *ngFor=\"let url of urlToImage\" src=\"{{ url }}\" alt=\"news\" (click)=\"goToPage('newsCard')\" />\r\n</div>\r\n<div>\r\n  <ngb-pagination class=\"d-flex justify-content-center\" [collectionSize]=\"20\" [(page)]=\"page\" [boundaryLinks]=\"true\">\r\n  </ngb-pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nlet answer;\nconst url =\n  'http://newsapi.org/v2/top-headlines?' +\n  'country=us&' +\n  'apiKey=c28ec9b0a8504b3897a5de03d03525df';\n\n@Component({\n  selector: 'app-news-card',\n  templateUrl: './news-card.component.html',\n  styleUrls: ['./news-card.component.scss'],\n})\nexport class NewsCardComponent {\n  titles: any;\n  response: any;\n  articles: any;\n  urlToImage: any;\n  arrayNews: any;\n  public page: number;\n  public collectionSize: number;\n  searchN = '';\n\n  constructor(private http: HttpClient) {}\n\n  getNews() {\n    this.http.get(url).subscribe((response) => {\n      answer = this.response = response;\n      let arrayNews = answer.articles.map((el) => {\n        return el.title;\n      });\n      this.titles = arrayNews;\n    });\n  }\n}\n","<h1>Bout News</h1>\n<img\n  src=\"https://botostore.com/netcat_files/6/7/preview_24542_1540646092.jpg_nc_cat_103_oh_a3aa9ac652b11ea36c71e744b62809e0_oe_5C5FBBBF\"\n  alt=\"AngularNews\">\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'search',\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(news, value) {\r\n    return news.filter((news) => {\r\n      return news.includes(value);\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}